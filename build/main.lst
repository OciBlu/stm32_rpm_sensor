ARM GAS  /tmp/ccpqSbzK.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stm32f1xx_it.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "string.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccpqSbzK.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** //__uint16_t RPM_Value=rpm; //veriabel untuk simpan nilai ADC
  51:Core/Src/main.c **** char msg[20];
  52:Core/Src/main.c **** __uint8_t TEXT_rpm[] = "RPM: ";
  53:Core/Src/main.c **** __uint8_t TEXT_enter[] = "\r\n";
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_TIM2_Init(void);
  60:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** __uint32_t counter = 0;
  68:Core/Src/main.c **** int speed = 0; // Tick per second
  69:Core/Src/main.c **** int rpm = 0; // Revolutions Per Minute
  70:Core/Src/main.c **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   counter++;
  73:Core/Src/main.c **** }
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccpqSbzK.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_TIM2_Init();
 106:Core/Src/main.c ****   MX_USART1_UART_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c ****   HAL_TIM_Encoder_Start_IT(&htim2, TIM_CHANNEL_1 );
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c ****   while (1)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     /* USER CODE END WHILE */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 118:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, TEXT_rpm, strlen(TEXT_rpm), HAL_MAX_DELAY);
 119:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, rpm, strlen(rpm), HAL_MAX_DELAY);
 120:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, TEXT_enter, strlen(TEXT_enter), HAL_MAX_DELAY);
 121:Core/Src/main.c ****     HAL_Delay(1000);
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 124:Core/Src/main.c **** }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief System Clock Configuration
 128:Core/Src/main.c ****   * @retval None
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** void SystemClock_Config(void)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 136:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccpqSbzK.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 167:Core/Src/main.c ****   * @param None
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** static void MX_TIM2_Init(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 178:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 179:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 184:Core/Src/main.c ****   htim2.Instance = TIM2;
 185:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 186:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 187:Core/Src/main.c ****   htim2.Init.Period = 65535;
 188:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 189:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 190:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 195:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 204:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccpqSbzK.s 			page 5


 205:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 210:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 211:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 212:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 213:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief USART1 Initialization Function
 225:Core/Src/main.c ****   * @param None
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 229:Core/Src/main.c **** {
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 238:Core/Src/main.c ****   huart1.Instance = USART1;
 239:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 240:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 241:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 242:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 243:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 244:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 245:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 246:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief GPIO Initialization Function
 258:Core/Src/main.c ****   * @param None
 259:Core/Src/main.c ****   * @retval None
 260:Core/Src/main.c ****   */
 261:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccpqSbzK.s 			page 6


 262:Core/Src/main.c **** {
  26              		.loc 1 262 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 263:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 264:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 267:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 267 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 267 3 view .LVU2
  37              		.loc 1 267 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 267 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 267 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 267 3 view .LVU6
 268:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 268 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 268 3 view .LVU8
  53              		.loc 1 268 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 268 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 268 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 268 3 view .LVU12
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 271:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 272:Core/Src/main.c **** }
  65              		.loc 1 272 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
ARM GAS  /tmp/ccpqSbzK.s 			page 7


  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE71:
  78              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_IC_CaptureCallback
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	HAL_TIM_IC_CaptureCallback:
  87              	.LVL0:
  88              	.LFB66:
  71:Core/Src/main.c ****   counter++;
  89              		.loc 1 71 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  72:Core/Src/main.c **** }
  94              		.loc 1 72 3 view .LVU15
  72:Core/Src/main.c **** }
  95              		.loc 1 72 10 is_stmt 0 view .LVU16
  96 0000 024A     		ldr	r2, .L6
  97 0002 1368     		ldr	r3, [r2]
  98 0004 0133     		adds	r3, r3, #1
  99 0006 1360     		str	r3, [r2]
  73:Core/Src/main.c **** /* USER CODE END 0 */
 100              		.loc 1 73 1 view .LVU17
 101 0008 7047     		bx	lr
 102              	.L7:
 103 000a 00BF     		.align	2
 104              	.L6:
 105 000c 00000000 		.word	.LANCHOR0
 106              		.cfi_endproc
 107              	.LFE66:
 109              		.section	.text.Error_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	Error_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	Error_Handler:
 118              	.LFB72:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* USER CODE END 4 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 280:Core/Src/main.c ****   * @retval None
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  /tmp/ccpqSbzK.s 			page 8


 283:Core/Src/main.c **** {
 119              		.loc 1 283 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 284:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 285:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 286:Core/Src/main.c ****   __disable_irq();
 125              		.loc 1 286 3 view .LVU19
 126              	.LBB6:
 127              	.LBI6:
 128              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /tmp/ccpqSbzK.s 			page 9


  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 129              		.loc 2 69 57 view .LVU20
 130              	.LBB7:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 131              		.loc 2 71 3 view .LVU21
 132              		.syntax unified
 133              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 134 0000 72B6     		cpsid i
 135              	@ 0 "" 2
 136              		.thumb
 137              		.syntax unified
 138              	.L9:
 139              	.LBE7:
 140              	.LBE6:
 287:Core/Src/main.c ****   while (1)
 141              		.loc 1 287 3 discriminator 1 view .LVU22
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****   }
 142              		.loc 1 289 3 discriminator 1 view .LVU23
 287:Core/Src/main.c ****   while (1)
 143              		.loc 1 287 9 discriminator 1 view .LVU24
 144 0002 FEE7     		b	.L9
 145              		.cfi_endproc
 146              	.LFE72:
 148              		.section	.text.MX_TIM2_Init,"ax",%progbits
 149              		.align	1
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	MX_TIM2_Init:
ARM GAS  /tmp/ccpqSbzK.s 			page 10


 156              	.LFB69:
 171:Core/Src/main.c **** 
 157              		.loc 1 171 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 40
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161 0000 00B5     		push	{lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 4
 164              		.cfi_offset 14, -4
 165 0002 8BB0     		sub	sp, sp, #44
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 48
 177:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 168              		.loc 1 177 3 view .LVU26
 177:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 169              		.loc 1 177 26 is_stmt 0 view .LVU27
 170 0004 0023     		movs	r3, #0
 171 0006 0693     		str	r3, [sp, #24]
 172 0008 0793     		str	r3, [sp, #28]
 173 000a 0893     		str	r3, [sp, #32]
 174 000c 0993     		str	r3, [sp, #36]
 178:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 175              		.loc 1 178 3 is_stmt 1 view .LVU28
 178:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 176              		.loc 1 178 27 is_stmt 0 view .LVU29
 177 000e 0493     		str	r3, [sp, #16]
 178 0010 0593     		str	r3, [sp, #20]
 179:Core/Src/main.c **** 
 179              		.loc 1 179 3 is_stmt 1 view .LVU30
 179:Core/Src/main.c **** 
 180              		.loc 1 179 22 is_stmt 0 view .LVU31
 181 0012 0093     		str	r3, [sp]
 182 0014 0193     		str	r3, [sp, #4]
 183 0016 0293     		str	r3, [sp, #8]
 184 0018 0393     		str	r3, [sp, #12]
 184:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 185              		.loc 1 184 3 is_stmt 1 view .LVU32
 184:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 186              		.loc 1 184 18 is_stmt 0 view .LVU33
 187 001a 1D48     		ldr	r0, .L22
 188 001c 4FF08042 		mov	r2, #1073741824
 189 0020 0260     		str	r2, [r0]
 185:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 190              		.loc 1 185 3 is_stmt 1 view .LVU34
 185:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 191              		.loc 1 185 24 is_stmt 0 view .LVU35
 192 0022 4360     		str	r3, [r0, #4]
 186:Core/Src/main.c ****   htim2.Init.Period = 65535;
 193              		.loc 1 186 3 is_stmt 1 view .LVU36
 186:Core/Src/main.c ****   htim2.Init.Period = 65535;
 194              		.loc 1 186 26 is_stmt 0 view .LVU37
 195 0024 8360     		str	r3, [r0, #8]
 187:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 196              		.loc 1 187 3 is_stmt 1 view .LVU38
 187:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 197              		.loc 1 187 21 is_stmt 0 view .LVU39
ARM GAS  /tmp/ccpqSbzK.s 			page 11


 198 0026 4FF6FF72 		movw	r2, #65535
 199 002a C260     		str	r2, [r0, #12]
 188:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 200              		.loc 1 188 3 is_stmt 1 view .LVU40
 188:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 201              		.loc 1 188 28 is_stmt 0 view .LVU41
 202 002c 0361     		str	r3, [r0, #16]
 189:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 203              		.loc 1 189 3 is_stmt 1 view .LVU42
 189:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 204              		.loc 1 189 32 is_stmt 0 view .LVU43
 205 002e 8361     		str	r3, [r0, #24]
 190:Core/Src/main.c ****   {
 206              		.loc 1 190 3 is_stmt 1 view .LVU44
 190:Core/Src/main.c ****   {
 207              		.loc 1 190 7 is_stmt 0 view .LVU45
 208 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 209              	.LVL1:
 190:Core/Src/main.c ****   {
 210              		.loc 1 190 6 view .LVU46
 211 0034 08BB     		cbnz	r0, .L17
 194:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 212              		.loc 1 194 3 is_stmt 1 view .LVU47
 194:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 213              		.loc 1 194 34 is_stmt 0 view .LVU48
 214 0036 4FF48053 		mov	r3, #4096
 215 003a 0693     		str	r3, [sp, #24]
 195:Core/Src/main.c ****   {
 216              		.loc 1 195 3 is_stmt 1 view .LVU49
 195:Core/Src/main.c ****   {
 217              		.loc 1 195 7 is_stmt 0 view .LVU50
 218 003c 06A9     		add	r1, sp, #24
 219 003e 1448     		ldr	r0, .L22
 220 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 221              	.LVL2:
 195:Core/Src/main.c ****   {
 222              		.loc 1 195 6 view .LVU51
 223 0044 D8B9     		cbnz	r0, .L18
 199:Core/Src/main.c ****   {
 224              		.loc 1 199 3 is_stmt 1 view .LVU52
 199:Core/Src/main.c ****   {
 225              		.loc 1 199 7 is_stmt 0 view .LVU53
 226 0046 1248     		ldr	r0, .L22
 227 0048 FFF7FEFF 		bl	HAL_TIM_IC_Init
 228              	.LVL3:
 199:Core/Src/main.c ****   {
 229              		.loc 1 199 6 view .LVU54
 230 004c C8B9     		cbnz	r0, .L19
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 231              		.loc 1 203 3 is_stmt 1 view .LVU55
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 232              		.loc 1 203 37 is_stmt 0 view .LVU56
 233 004e 0023     		movs	r3, #0
 234 0050 0493     		str	r3, [sp, #16]
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 235              		.loc 1 204 3 is_stmt 1 view .LVU57
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccpqSbzK.s 			page 12


 236              		.loc 1 204 33 is_stmt 0 view .LVU58
 237 0052 0593     		str	r3, [sp, #20]
 205:Core/Src/main.c ****   {
 238              		.loc 1 205 3 is_stmt 1 view .LVU59
 205:Core/Src/main.c ****   {
 239              		.loc 1 205 7 is_stmt 0 view .LVU60
 240 0054 04A9     		add	r1, sp, #16
 241 0056 0E48     		ldr	r0, .L22
 242 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 243              	.LVL4:
 205:Core/Src/main.c ****   {
 244              		.loc 1 205 6 view .LVU61
 245 005c 98B9     		cbnz	r0, .L20
 209:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 246              		.loc 1 209 3 is_stmt 1 view .LVU62
 209:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 247              		.loc 1 209 24 is_stmt 0 view .LVU63
 248 005e 0022     		movs	r2, #0
 249 0060 0092     		str	r2, [sp]
 210:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 250              		.loc 1 210 3 is_stmt 1 view .LVU64
 210:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 251              		.loc 1 210 25 is_stmt 0 view .LVU65
 252 0062 0123     		movs	r3, #1
 253 0064 0193     		str	r3, [sp, #4]
 211:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 254              		.loc 1 211 3 is_stmt 1 view .LVU66
 211:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 255              		.loc 1 211 25 is_stmt 0 view .LVU67
 256 0066 0292     		str	r2, [sp, #8]
 212:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 257              		.loc 1 212 3 is_stmt 1 view .LVU68
 212:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 258              		.loc 1 212 22 is_stmt 0 view .LVU69
 259 0068 0392     		str	r2, [sp, #12]
 213:Core/Src/main.c ****   {
 260              		.loc 1 213 3 is_stmt 1 view .LVU70
 213:Core/Src/main.c ****   {
 261              		.loc 1 213 7 is_stmt 0 view .LVU71
 262 006a 6946     		mov	r1, sp
 263 006c 0848     		ldr	r0, .L22
 264 006e FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 265              	.LVL5:
 213:Core/Src/main.c ****   {
 266              		.loc 1 213 6 view .LVU72
 267 0072 50B9     		cbnz	r0, .L21
 221:Core/Src/main.c **** 
 268              		.loc 1 221 1 view .LVU73
 269 0074 0BB0     		add	sp, sp, #44
 270              	.LCFI4:
 271              		.cfi_remember_state
 272              		.cfi_def_cfa_offset 4
 273              		@ sp needed
 274 0076 5DF804FB 		ldr	pc, [sp], #4
 275              	.L17:
 276              	.LCFI5:
 277              		.cfi_restore_state
ARM GAS  /tmp/ccpqSbzK.s 			page 13


 192:Core/Src/main.c ****   }
 278              		.loc 1 192 5 is_stmt 1 view .LVU74
 279 007a FFF7FEFF 		bl	Error_Handler
 280              	.LVL6:
 281              	.L18:
 197:Core/Src/main.c ****   }
 282              		.loc 1 197 5 view .LVU75
 283 007e FFF7FEFF 		bl	Error_Handler
 284              	.LVL7:
 285              	.L19:
 201:Core/Src/main.c ****   }
 286              		.loc 1 201 5 view .LVU76
 287 0082 FFF7FEFF 		bl	Error_Handler
 288              	.LVL8:
 289              	.L20:
 207:Core/Src/main.c ****   }
 290              		.loc 1 207 5 view .LVU77
 291 0086 FFF7FEFF 		bl	Error_Handler
 292              	.LVL9:
 293              	.L21:
 215:Core/Src/main.c ****   }
 294              		.loc 1 215 5 view .LVU78
 295 008a FFF7FEFF 		bl	Error_Handler
 296              	.LVL10:
 297              	.L23:
 298 008e 00BF     		.align	2
 299              	.L22:
 300 0090 00000000 		.word	.LANCHOR1
 301              		.cfi_endproc
 302              	.LFE69:
 304              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_USART1_UART_Init:
 312              	.LFB70:
 229:Core/Src/main.c **** 
 313              		.loc 1 229 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 238:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 322              		.loc 1 238 3 view .LVU80
 238:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 323              		.loc 1 238 19 is_stmt 0 view .LVU81
 324 0002 0A48     		ldr	r0, .L28
 325 0004 0A4B     		ldr	r3, .L28+4
 326 0006 0360     		str	r3, [r0]
 239:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 327              		.loc 1 239 3 is_stmt 1 view .LVU82
ARM GAS  /tmp/ccpqSbzK.s 			page 14


 239:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 328              		.loc 1 239 24 is_stmt 0 view .LVU83
 329 0008 4FF4E133 		mov	r3, #115200
 330 000c 4360     		str	r3, [r0, #4]
 240:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 331              		.loc 1 240 3 is_stmt 1 view .LVU84
 240:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 332              		.loc 1 240 26 is_stmt 0 view .LVU85
 333 000e 0023     		movs	r3, #0
 334 0010 8360     		str	r3, [r0, #8]
 241:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 335              		.loc 1 241 3 is_stmt 1 view .LVU86
 241:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 336              		.loc 1 241 24 is_stmt 0 view .LVU87
 337 0012 C360     		str	r3, [r0, #12]
 242:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 338              		.loc 1 242 3 is_stmt 1 view .LVU88
 242:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 339              		.loc 1 242 22 is_stmt 0 view .LVU89
 340 0014 0361     		str	r3, [r0, #16]
 243:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 341              		.loc 1 243 3 is_stmt 1 view .LVU90
 243:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 342              		.loc 1 243 20 is_stmt 0 view .LVU91
 343 0016 0C22     		movs	r2, #12
 344 0018 4261     		str	r2, [r0, #20]
 244:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 345              		.loc 1 244 3 is_stmt 1 view .LVU92
 244:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 346              		.loc 1 244 25 is_stmt 0 view .LVU93
 347 001a 8361     		str	r3, [r0, #24]
 245:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 348              		.loc 1 245 3 is_stmt 1 view .LVU94
 245:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 349              		.loc 1 245 28 is_stmt 0 view .LVU95
 350 001c C361     		str	r3, [r0, #28]
 246:Core/Src/main.c ****   {
 351              		.loc 1 246 3 is_stmt 1 view .LVU96
 246:Core/Src/main.c ****   {
 352              		.loc 1 246 7 is_stmt 0 view .LVU97
 353 001e FFF7FEFF 		bl	HAL_UART_Init
 354              	.LVL11:
 246:Core/Src/main.c ****   {
 355              		.loc 1 246 6 view .LVU98
 356 0022 00B9     		cbnz	r0, .L27
 254:Core/Src/main.c **** 
 357              		.loc 1 254 1 view .LVU99
 358 0024 08BD     		pop	{r3, pc}
 359              	.L27:
 248:Core/Src/main.c ****   }
 360              		.loc 1 248 5 is_stmt 1 view .LVU100
 361 0026 FFF7FEFF 		bl	Error_Handler
 362              	.LVL12:
 363              	.L29:
 364 002a 00BF     		.align	2
 365              	.L28:
 366 002c 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccpqSbzK.s 			page 15


 367 0030 00380140 		.word	1073821696
 368              		.cfi_endproc
 369              	.LFE70:
 371              		.section	.text.SystemClock_Config,"ax",%progbits
 372              		.align	1
 373              		.global	SystemClock_Config
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 379              	SystemClock_Config:
 380              	.LFB68:
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 381              		.loc 1 131 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 64
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 00B5     		push	{lr}
 386              	.LCFI7:
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 14, -4
 389 0002 91B0     		sub	sp, sp, #68
 390              	.LCFI8:
 391              		.cfi_def_cfa_offset 72
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 392              		.loc 1 132 3 view .LVU102
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 393              		.loc 1 132 22 is_stmt 0 view .LVU103
 394 0004 2822     		movs	r2, #40
 395 0006 0021     		movs	r1, #0
 396 0008 06A8     		add	r0, sp, #24
 397 000a FFF7FEFF 		bl	memset
 398              	.LVL13:
 133:Core/Src/main.c **** 
 399              		.loc 1 133 3 is_stmt 1 view .LVU104
 133:Core/Src/main.c **** 
 400              		.loc 1 133 22 is_stmt 0 view .LVU105
 401 000e 0023     		movs	r3, #0
 402 0010 0193     		str	r3, [sp, #4]
 403 0012 0293     		str	r3, [sp, #8]
 404 0014 0393     		str	r3, [sp, #12]
 405 0016 0493     		str	r3, [sp, #16]
 406 0018 0593     		str	r3, [sp, #20]
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 407              		.loc 1 138 3 is_stmt 1 view .LVU106
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 408              		.loc 1 138 36 is_stmt 0 view .LVU107
 409 001a 0122     		movs	r2, #1
 410 001c 0692     		str	r2, [sp, #24]
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 411              		.loc 1 139 3 is_stmt 1 view .LVU108
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 412              		.loc 1 139 30 is_stmt 0 view .LVU109
 413 001e 4FF48033 		mov	r3, #65536
 414 0022 0793     		str	r3, [sp, #28]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 415              		.loc 1 140 3 is_stmt 1 view .LVU110
ARM GAS  /tmp/ccpqSbzK.s 			page 16


 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 416              		.loc 1 141 3 view .LVU111
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 417              		.loc 1 141 30 is_stmt 0 view .LVU112
 418 0024 0A92     		str	r2, [sp, #40]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 419              		.loc 1 142 3 is_stmt 1 view .LVU113
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 420              		.loc 1 142 34 is_stmt 0 view .LVU114
 421 0026 0222     		movs	r2, #2
 422 0028 0D92     		str	r2, [sp, #52]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 423              		.loc 1 143 3 is_stmt 1 view .LVU115
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 424              		.loc 1 143 35 is_stmt 0 view .LVU116
 425 002a 0E93     		str	r3, [sp, #56]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 426              		.loc 1 144 3 is_stmt 1 view .LVU117
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 144 32 is_stmt 0 view .LVU118
 428 002c 4FF4E013 		mov	r3, #1835008
 429 0030 0F93     		str	r3, [sp, #60]
 145:Core/Src/main.c ****   {
 430              		.loc 1 145 3 is_stmt 1 view .LVU119
 145:Core/Src/main.c ****   {
 431              		.loc 1 145 7 is_stmt 0 view .LVU120
 432 0032 06A8     		add	r0, sp, #24
 433 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 434              	.LVL14:
 145:Core/Src/main.c ****   {
 435              		.loc 1 145 6 view .LVU121
 436 0038 80B9     		cbnz	r0, .L34
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 437              		.loc 1 152 3 is_stmt 1 view .LVU122
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 438              		.loc 1 152 31 is_stmt 0 view .LVU123
 439 003a 0F23     		movs	r3, #15
 440 003c 0193     		str	r3, [sp, #4]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 441              		.loc 1 154 3 is_stmt 1 view .LVU124
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 442              		.loc 1 154 34 is_stmt 0 view .LVU125
 443 003e 0221     		movs	r1, #2
 444 0040 0291     		str	r1, [sp, #8]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 445              		.loc 1 155 3 is_stmt 1 view .LVU126
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 446              		.loc 1 155 35 is_stmt 0 view .LVU127
 447 0042 0023     		movs	r3, #0
 448 0044 0393     		str	r3, [sp, #12]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 449              		.loc 1 156 3 is_stmt 1 view .LVU128
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 450              		.loc 1 156 36 is_stmt 0 view .LVU129
 451 0046 4FF48062 		mov	r2, #1024
 452 004a 0492     		str	r2, [sp, #16]
 157:Core/Src/main.c **** 
ARM GAS  /tmp/ccpqSbzK.s 			page 17


 453              		.loc 1 157 3 is_stmt 1 view .LVU130
 157:Core/Src/main.c **** 
 454              		.loc 1 157 36 is_stmt 0 view .LVU131
 455 004c 0593     		str	r3, [sp, #20]
 159:Core/Src/main.c ****   {
 456              		.loc 1 159 3 is_stmt 1 view .LVU132
 159:Core/Src/main.c ****   {
 457              		.loc 1 159 7 is_stmt 0 view .LVU133
 458 004e 01A8     		add	r0, sp, #4
 459 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 460              	.LVL15:
 159:Core/Src/main.c ****   {
 461              		.loc 1 159 6 view .LVU134
 462 0054 20B9     		cbnz	r0, .L35
 163:Core/Src/main.c **** 
 463              		.loc 1 163 1 view .LVU135
 464 0056 11B0     		add	sp, sp, #68
 465              	.LCFI9:
 466              		.cfi_remember_state
 467              		.cfi_def_cfa_offset 4
 468              		@ sp needed
 469 0058 5DF804FB 		ldr	pc, [sp], #4
 470              	.L34:
 471              	.LCFI10:
 472              		.cfi_restore_state
 147:Core/Src/main.c ****   }
 473              		.loc 1 147 5 is_stmt 1 view .LVU136
 474 005c FFF7FEFF 		bl	Error_Handler
 475              	.LVL16:
 476              	.L35:
 161:Core/Src/main.c ****   }
 477              		.loc 1 161 5 view .LVU137
 478 0060 FFF7FEFF 		bl	Error_Handler
 479              	.LVL17:
 480              		.cfi_endproc
 481              	.LFE68:
 483              		.section	.text.main,"ax",%progbits
 484              		.align	1
 485              		.global	main
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	main:
 492              	.LFB67:
  81:Core/Src/main.c **** 
 493              		.loc 1 81 1 view -0
 494              		.cfi_startproc
 495              		@ Volatile: function does not return.
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 08B5     		push	{r3, lr}
 499              	.LCFI11:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccpqSbzK.s 			page 18


 503              		.loc 1 90 3 view .LVU139
 504 0002 FFF7FEFF 		bl	HAL_Init
 505              	.LVL18:
  97:Core/Src/main.c **** 
 506              		.loc 1 97 3 view .LVU140
 507 0006 FFF7FEFF 		bl	SystemClock_Config
 508              	.LVL19:
 104:Core/Src/main.c ****   MX_TIM2_Init();
 509              		.loc 1 104 3 view .LVU141
 510 000a FFF7FEFF 		bl	MX_GPIO_Init
 511              	.LVL20:
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 512              		.loc 1 105 3 view .LVU142
 513 000e FFF7FEFF 		bl	MX_TIM2_Init
 514              	.LVL21:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 515              		.loc 1 106 3 view .LVU143
 516 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 517              	.LVL22:
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 518              		.loc 1 108 3 view .LVU144
 519 0016 0021     		movs	r1, #0
 520 0018 1548     		ldr	r0, .L39
 521 001a FFF7FEFF 		bl	HAL_TIM_Encoder_Start_IT
 522              	.LVL23:
 523              	.L37:
 113:Core/Src/main.c ****   {
 524              		.loc 1 113 3 discriminator 1 view .LVU145
 118:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, rpm, strlen(rpm), HAL_MAX_DELAY);
 525              		.loc 1 118 5 discriminator 1 view .LVU146
 118:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, rpm, strlen(rpm), HAL_MAX_DELAY);
 526              		.loc 1 118 42 is_stmt 0 discriminator 1 view .LVU147
 527 001e 154D     		ldr	r5, .L39+4
 528 0020 2846     		mov	r0, r5
 529 0022 FFF7FEFF 		bl	strlen
 530              	.LVL24:
 118:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, rpm, strlen(rpm), HAL_MAX_DELAY);
 531              		.loc 1 118 5 discriminator 1 view .LVU148
 532 0026 144C     		ldr	r4, .L39+8
 533 0028 4FF0FF33 		mov	r3, #-1
 534 002c 82B2     		uxth	r2, r0
 535 002e 2946     		mov	r1, r5
 536 0030 2046     		mov	r0, r4
 537 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 538              	.LVL25:
 119:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, TEXT_enter, strlen(TEXT_enter), HAL_MAX_DELAY);
 539              		.loc 1 119 5 is_stmt 1 discriminator 1 view .LVU149
 540 0036 114B     		ldr	r3, .L39+12
 541 0038 1D68     		ldr	r5, [r3]
 119:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, TEXT_enter, strlen(TEXT_enter), HAL_MAX_DELAY);
 542              		.loc 1 119 37 is_stmt 0 discriminator 1 view .LVU150
 543 003a 2846     		mov	r0, r5
 544 003c FFF7FEFF 		bl	strlen
 545              	.LVL26:
 119:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, TEXT_enter, strlen(TEXT_enter), HAL_MAX_DELAY);
 546              		.loc 1 119 5 discriminator 1 view .LVU151
 547 0040 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/ccpqSbzK.s 			page 19


 548 0044 82B2     		uxth	r2, r0
 549 0046 2946     		mov	r1, r5
 550 0048 2046     		mov	r0, r4
 551 004a FFF7FEFF 		bl	HAL_UART_Transmit
 552              	.LVL27:
 120:Core/Src/main.c ****     HAL_Delay(1000);
 553              		.loc 1 120 5 is_stmt 1 discriminator 1 view .LVU152
 120:Core/Src/main.c ****     HAL_Delay(1000);
 554              		.loc 1 120 44 is_stmt 0 discriminator 1 view .LVU153
 555 004e 0C4D     		ldr	r5, .L39+16
 556 0050 2846     		mov	r0, r5
 557 0052 FFF7FEFF 		bl	strlen
 558              	.LVL28:
 120:Core/Src/main.c ****     HAL_Delay(1000);
 559              		.loc 1 120 5 discriminator 1 view .LVU154
 560 0056 4FF0FF33 		mov	r3, #-1
 561 005a 82B2     		uxth	r2, r0
 562 005c 2946     		mov	r1, r5
 563 005e 2046     		mov	r0, r4
 564 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 565              	.LVL29:
 121:Core/Src/main.c ****   }
 566              		.loc 1 121 5 is_stmt 1 discriminator 1 view .LVU155
 567 0064 4FF47A70 		mov	r0, #1000
 568 0068 FFF7FEFF 		bl	HAL_Delay
 569              	.LVL30:
 113:Core/Src/main.c ****   {
 570              		.loc 1 113 9 discriminator 1 view .LVU156
 571 006c D7E7     		b	.L37
 572              	.L40:
 573 006e 00BF     		.align	2
 574              	.L39:
 575 0070 00000000 		.word	.LANCHOR1
 576 0074 00000000 		.word	.LANCHOR3
 577 0078 00000000 		.word	.LANCHOR2
 578 007c 00000000 		.word	.LANCHOR4
 579 0080 00000000 		.word	.LANCHOR5
 580              		.cfi_endproc
 581              	.LFE67:
 583              		.global	rpm
 584              		.global	speed
 585              		.global	counter
 586              		.global	TEXT_enter
 587              		.global	TEXT_rpm
 588              		.global	msg
 589              		.global	huart1
 590              		.global	htim2
 591              		.section	.bss.counter,"aw",%nobits
 592              		.align	2
 593              		.set	.LANCHOR0,. + 0
 596              	counter:
 597 0000 00000000 		.space	4
 598              		.section	.bss.htim2,"aw",%nobits
 599              		.align	2
 600              		.set	.LANCHOR1,. + 0
 603              	htim2:
 604 0000 00000000 		.space	72
ARM GAS  /tmp/ccpqSbzK.s 			page 20


 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 605              		.section	.bss.huart1,"aw",%nobits
 606              		.align	2
 607              		.set	.LANCHOR2,. + 0
 610              	huart1:
 611 0000 00000000 		.space	72
 611      00000000 
 611      00000000 
 611      00000000 
 611      00000000 
 612              		.section	.bss.msg,"aw",%nobits
 613              		.align	2
 616              	msg:
 617 0000 00000000 		.space	20
 617      00000000 
 617      00000000 
 617      00000000 
 617      00000000 
 618              		.section	.bss.rpm,"aw",%nobits
 619              		.align	2
 620              		.set	.LANCHOR4,. + 0
 623              	rpm:
 624 0000 00000000 		.space	4
 625              		.section	.bss.speed,"aw",%nobits
 626              		.align	2
 629              	speed:
 630 0000 00000000 		.space	4
 631              		.section	.data.TEXT_enter,"aw"
 632              		.align	2
 633              		.set	.LANCHOR5,. + 0
 636              	TEXT_enter:
 637 0000 0D0A00   		.ascii	"\015\012\000"
 638              		.section	.data.TEXT_rpm,"aw"
 639              		.align	2
 640              		.set	.LANCHOR3,. + 0
 643              	TEXT_rpm:
 644 0000 52504D3A 		.ascii	"RPM: \000"
 644      2000
 645              		.text
 646              	.Letext0:
 647              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 648              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 649              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 650              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 651              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 652              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 653              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 654              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 655              		.file 11 "/usr/include/newlib/machine/_default_types.h"
 656              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 657              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 658              		.file 14 "/usr/include/newlib/string.h"
 659              		.file 15 "<built-in>"
ARM GAS  /tmp/ccpqSbzK.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccpqSbzK.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccpqSbzK.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccpqSbzK.s:74     .text.MX_GPIO_Init:000000000000002c $d
     /tmp/ccpqSbzK.s:79     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccpqSbzK.s:86     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccpqSbzK.s:105    .text.HAL_TIM_IC_CaptureCallback:000000000000000c $d
     /tmp/ccpqSbzK.s:110    .text.Error_Handler:0000000000000000 $t
     /tmp/ccpqSbzK.s:117    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccpqSbzK.s:149    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccpqSbzK.s:155    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccpqSbzK.s:300    .text.MX_TIM2_Init:0000000000000090 $d
     /tmp/ccpqSbzK.s:305    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccpqSbzK.s:311    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccpqSbzK.s:366    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccpqSbzK.s:372    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccpqSbzK.s:379    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccpqSbzK.s:484    .text.main:0000000000000000 $t
     /tmp/ccpqSbzK.s:491    .text.main:0000000000000000 main
     /tmp/ccpqSbzK.s:575    .text.main:0000000000000070 $d
     /tmp/ccpqSbzK.s:623    .bss.rpm:0000000000000000 rpm
     /tmp/ccpqSbzK.s:629    .bss.speed:0000000000000000 speed
     /tmp/ccpqSbzK.s:596    .bss.counter:0000000000000000 counter
     /tmp/ccpqSbzK.s:636    .data.TEXT_enter:0000000000000000 TEXT_enter
     /tmp/ccpqSbzK.s:643    .data.TEXT_rpm:0000000000000000 TEXT_rpm
     /tmp/ccpqSbzK.s:616    .bss.msg:0000000000000000 msg
     /tmp/ccpqSbzK.s:610    .bss.huart1:0000000000000000 huart1
     /tmp/ccpqSbzK.s:603    .bss.htim2:0000000000000000 htim2
     /tmp/ccpqSbzK.s:592    .bss.counter:0000000000000000 $d
     /tmp/ccpqSbzK.s:599    .bss.htim2:0000000000000000 $d
     /tmp/ccpqSbzK.s:606    .bss.huart1:0000000000000000 $d
     /tmp/ccpqSbzK.s:613    .bss.msg:0000000000000000 $d
     /tmp/ccpqSbzK.s:619    .bss.rpm:0000000000000000 $d
     /tmp/ccpqSbzK.s:626    .bss.speed:0000000000000000 $d
     /tmp/ccpqSbzK.s:632    .data.TEXT_enter:0000000000000000 $d
     /tmp/ccpqSbzK.s:639    .data.TEXT_rpm:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Encoder_Start_IT
strlen
HAL_UART_Transmit
HAL_Delay
