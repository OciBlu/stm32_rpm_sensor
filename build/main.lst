ARM GAS  /tmp/ccSvI0xi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stm32f1xx_it.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "string.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #define IDLE   0
  30:Core/Src/main.c **** #define DONE   1
  31:Core/Src/main.c **** #define F_CLK  72000000UL
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** volatile uint8_t state = IDLE;
ARM GAS  /tmp/ccSvI0xi.s 			page 2


  34:Core/Src/main.c **** volatile uint8_t message[35] = {'\0'};
  35:Core/Src/main.c **** volatile uint8_t message2[35] = {'\0'};
  36:Core/Src/main.c **** volatile uint32_t T1 = 0;
  37:Core/Src/main.c **** volatile uint32_t T2 = 0;
  38:Core/Src/main.c **** volatile uint32_t ticks = 0;
  39:Core/Src/main.c **** volatile uint16_t TIM2_OVC = 0;
  40:Core/Src/main.c **** volatile uint32_t frequency = 0;
  41:Core/Src/main.c **** volatile uint32_t rpm = 0;
  42:Core/Src/main.c **** /* USER CODE END Includes */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PTD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PM */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** UART_HandleTypeDef huart1;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** static void MX_GPIO_Init(void);
  71:Core/Src/main.c **** static void MX_TIM2_Init(void);
  72:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /**
  83:Core/Src/main.c ****   * @brief  The application entry point.
  84:Core/Src/main.c ****   * @retval int
  85:Core/Src/main.c ****   */
  86:Core/Src/main.c **** int main(void)
  87:Core/Src/main.c **** {
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccSvI0xi.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Core/Src/main.c ****   HAL_Init();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Configure the system clock */
 103:Core/Src/main.c ****   SystemClock_Config();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Initialize all configured peripherals */
 110:Core/Src/main.c ****   MX_GPIO_Init();
 111:Core/Src/main.c ****   MX_TIM2_Init();
 112:Core/Src/main.c ****   MX_USART1_UART_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 115:Core/Src/main.c ****   HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****     sprintf(message2, "RPM = %lu \n\r", rpm);
 126:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, message2, sizeof(message2), 100);
 127:Core/Src/main.c ****     HAL_Delay(1000);
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef* htim)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****     if(state == IDLE)
 135:Core/Src/main.c ****     {
 136:Core/Src/main.c ****         T1 = TIM2->CCR1;
 137:Core/Src/main.c ****         TIM2_OVC = 0;
 138:Core/Src/main.c ****         state = DONE;
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c ****     else if(state == DONE)
 141:Core/Src/main.c ****     {
 142:Core/Src/main.c ****         T2 = TIM2->CCR1;
 143:Core/Src/main.c ****         ticks = (T2 + (TIM2_OVC * 65536)) - T1;
 144:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 145:Core/Src/main.c ****         rpm = (frequency * 60 * 2)/1; //RPM = (FRQ * 60 * 2)/POLE
 146:Core/Src/main.c ****         if(frequency != 0)
 147:Core/Src/main.c ****         {
ARM GAS  /tmp/ccSvI0xi.s 			page 4


 148:Core/Src/main.c ****            /*
 149:Core/Src/main.c ****           sprintf(message, "Frequency = %lu Hz\n\r", frequency);
 150:Core/Src/main.c ****           HAL_UART_Transmit(&huart1, message, sizeof(message), 100);
 151:Core/Src/main.c ****          
 152:Core/Src/main.c ****           sprintf(message2, "RPM = %lu \n\r", rpm);
 153:Core/Src/main.c ****           HAL_UART_Transmit(&huart1, message2, sizeof(message2), 100);
 154:Core/Src/main.c ****           */
 155:Core/Src/main.c ****         }
 156:Core/Src/main.c ****         state = IDLE;
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c ****     TIM2_OVC++;
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 175:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
ARM GAS  /tmp/ccSvI0xi.s 			page 5


 205:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 206:Core/Src/main.c ****   * @param None
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** static void MX_TIM2_Init(void)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 217:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 218:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 223:Core/Src/main.c ****   htim2.Instance = TIM2;
 224:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 225:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 226:Core/Src/main.c ****   htim2.Init.Period = 65535;
 227:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 228:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 229:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 234:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 243:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 244:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 249:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 250:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 251:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 252:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** }
 261:Core/Src/main.c **** 
ARM GAS  /tmp/ccSvI0xi.s 			page 6


 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****   * @brief USART1 Initialization Function
 264:Core/Src/main.c ****   * @param None
 265:Core/Src/main.c ****   * @retval None
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 268:Core/Src/main.c **** {
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 277:Core/Src/main.c ****   huart1.Instance = USART1;
 278:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 279:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 280:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 281:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 282:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 283:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 284:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 285:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief GPIO Initialization Function
 297:Core/Src/main.c ****   * @param None
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** static void MX_GPIO_Init(void)
 301:Core/Src/main.c **** {
  26              		.loc 1 301 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 302:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 303:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 306:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 306 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 306 3 view .LVU2
  37              		.loc 1 306 3 view .LVU3
ARM GAS  /tmp/ccSvI0xi.s 			page 7


  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 306 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 306 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 306 3 view .LVU6
 307:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 307 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 307 3 view .LVU8
  53              		.loc 1 307 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 307 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 307 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 307 3 view .LVU12
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 310:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 311:Core/Src/main.c **** }
  65              		.loc 1 311 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE72:
  78              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_IC_CaptureCallback
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	HAL_TIM_IC_CaptureCallback:
  87              	.LVL0:
  88              	.LFB67:
 133:Core/Src/main.c ****     if(state == IDLE)
  89              		.loc 1 133 1 is_stmt 1 view -0
  90              		.cfi_startproc
ARM GAS  /tmp/ccSvI0xi.s 			page 8


  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 134:Core/Src/main.c ****     {
  94              		.loc 1 134 5 view .LVU15
 134:Core/Src/main.c ****     {
  95              		.loc 1 134 14 is_stmt 0 view .LVU16
  96 0000 1A4B     		ldr	r3, .L9
  97 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134:Core/Src/main.c ****     {
  98              		.loc 1 134 7 view .LVU17
  99 0004 5BB9     		cbnz	r3, .L6
 136:Core/Src/main.c ****         TIM2_OVC = 0;
 100              		.loc 1 136 9 is_stmt 1 view .LVU18
 136:Core/Src/main.c ****         TIM2_OVC = 0;
 101              		.loc 1 136 18 is_stmt 0 view .LVU19
 102 0006 4FF08043 		mov	r3, #1073741824
 103 000a 5A6B     		ldr	r2, [r3, #52]
 136:Core/Src/main.c ****         TIM2_OVC = 0;
 104              		.loc 1 136 12 view .LVU20
 105 000c 184B     		ldr	r3, .L9+4
 106 000e 1A60     		str	r2, [r3]
 137:Core/Src/main.c ****         state = DONE;
 107              		.loc 1 137 9 is_stmt 1 view .LVU21
 137:Core/Src/main.c ****         state = DONE;
 108              		.loc 1 137 18 is_stmt 0 view .LVU22
 109 0010 184B     		ldr	r3, .L9+8
 110 0012 0022     		movs	r2, #0
 111 0014 1A80     		strh	r2, [r3]	@ movhi
 138:Core/Src/main.c ****     }
 112              		.loc 1 138 9 is_stmt 1 view .LVU23
 138:Core/Src/main.c ****     }
 113              		.loc 1 138 15 is_stmt 0 view .LVU24
 114 0016 154B     		ldr	r3, .L9
 115 0018 0122     		movs	r2, #1
 116 001a 1A70     		strb	r2, [r3]
 117 001c 7047     		bx	lr
 118              	.L6:
 140:Core/Src/main.c ****     {
 119              		.loc 1 140 10 is_stmt 1 view .LVU25
 140:Core/Src/main.c ****     {
 120              		.loc 1 140 19 is_stmt 0 view .LVU26
 121 001e 134B     		ldr	r3, .L9
 122 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 123 0022 DBB2     		uxtb	r3, r3
 140:Core/Src/main.c ****     {
 124              		.loc 1 140 12 view .LVU27
 125 0024 012B     		cmp	r3, #1
 126 0026 00D0     		beq	.L8
 127              	.L5:
 158:Core/Src/main.c **** 
 128              		.loc 1 158 1 view .LVU28
 129 0028 7047     		bx	lr
 130              	.L8:
 142:Core/Src/main.c ****         ticks = (T2 + (TIM2_OVC * 65536)) - T1;
 131              		.loc 1 142 9 is_stmt 1 view .LVU29
 142:Core/Src/main.c ****         ticks = (T2 + (TIM2_OVC * 65536)) - T1;
ARM GAS  /tmp/ccSvI0xi.s 			page 9


 132              		.loc 1 142 18 is_stmt 0 view .LVU30
 133 002a 4FF08043 		mov	r3, #1073741824
 134 002e 5B6B     		ldr	r3, [r3, #52]
 142:Core/Src/main.c ****         ticks = (T2 + (TIM2_OVC * 65536)) - T1;
 135              		.loc 1 142 12 view .LVU31
 136 0030 114A     		ldr	r2, .L9+12
 137 0032 1360     		str	r3, [r2]
 143:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 138              		.loc 1 143 9 is_stmt 1 view .LVU32
 143:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 139              		.loc 1 143 33 is_stmt 0 view .LVU33
 140 0034 0F4B     		ldr	r3, .L9+8
 141 0036 1988     		ldrh	r1, [r3]
 143:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 142              		.loc 1 143 21 view .LVU34
 143 0038 1368     		ldr	r3, [r2]
 144 003a 03EB0143 		add	r3, r3, r1, lsl #16
 143:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 145              		.loc 1 143 43 view .LVU35
 146 003e 0C4A     		ldr	r2, .L9+4
 147 0040 1268     		ldr	r2, [r2]
 148 0042 9B1A     		subs	r3, r3, r2
 143:Core/Src/main.c ****         frequency = (uint32_t)(F_CLK/ticks);
 149              		.loc 1 143 15 view .LVU36
 150 0044 0D4A     		ldr	r2, .L9+16
 151 0046 1360     		str	r3, [r2]
 144:Core/Src/main.c ****         rpm = (frequency * 60 * 2)/1; //RPM = (FRQ * 60 * 2)/POLE
 152              		.loc 1 144 9 is_stmt 1 view .LVU37
 144:Core/Src/main.c ****         rpm = (frequency * 60 * 2)/1; //RPM = (FRQ * 60 * 2)/POLE
 153              		.loc 1 144 21 is_stmt 0 view .LVU38
 154 0048 1268     		ldr	r2, [r2]
 155 004a 0D4B     		ldr	r3, .L9+20
 156 004c B3FBF2F3 		udiv	r3, r3, r2
 144:Core/Src/main.c ****         rpm = (frequency * 60 * 2)/1; //RPM = (FRQ * 60 * 2)/POLE
 157              		.loc 1 144 19 view .LVU39
 158 0050 0C4A     		ldr	r2, .L9+24
 159 0052 1360     		str	r3, [r2]
 145:Core/Src/main.c ****         if(frequency != 0)
 160              		.loc 1 145 9 is_stmt 1 view .LVU40
 145:Core/Src/main.c ****         if(frequency != 0)
 161              		.loc 1 145 35 is_stmt 0 view .LVU41
 162 0054 1368     		ldr	r3, [r2]
 163 0056 C3EB0313 		rsb	r3, r3, r3, lsl #4
 164 005a D900     		lsls	r1, r3, #3
 145:Core/Src/main.c ****         if(frequency != 0)
 165              		.loc 1 145 13 view .LVU42
 166 005c 0A4B     		ldr	r3, .L9+28
 167 005e 1960     		str	r1, [r3]
 146:Core/Src/main.c ****         {
 168              		.loc 1 146 9 is_stmt 1 view .LVU43
 146:Core/Src/main.c ****         {
 169              		.loc 1 146 22 is_stmt 0 view .LVU44
 170 0060 1368     		ldr	r3, [r2]
 155:Core/Src/main.c ****         state = IDLE;
 171              		.loc 1 155 9 is_stmt 1 view .LVU45
 156:Core/Src/main.c ****     }
 172              		.loc 1 156 9 view .LVU46
ARM GAS  /tmp/ccSvI0xi.s 			page 10


 156:Core/Src/main.c ****     }
 173              		.loc 1 156 15 is_stmt 0 view .LVU47
 174 0062 024B     		ldr	r3, .L9
 175 0064 0022     		movs	r2, #0
 176 0066 1A70     		strb	r2, [r3]
 158:Core/Src/main.c **** 
 177              		.loc 1 158 1 view .LVU48
 178 0068 DEE7     		b	.L5
 179              	.L10:
 180 006a 00BF     		.align	2
 181              	.L9:
 182 006c 00000000 		.word	.LANCHOR0
 183 0070 00000000 		.word	.LANCHOR1
 184 0074 00000000 		.word	.LANCHOR2
 185 0078 00000000 		.word	.LANCHOR3
 186 007c 00000000 		.word	.LANCHOR4
 187 0080 00A24A04 		.word	72000000
 188 0084 00000000 		.word	.LANCHOR5
 189 0088 00000000 		.word	.LANCHOR6
 190              		.cfi_endproc
 191              	.LFE67:
 193              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_TIM_PeriodElapsedCallback
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu softvfp
 201              	HAL_TIM_PeriodElapsedCallback:
 202              	.LVL1:
 203              	.LFB68:
 161:Core/Src/main.c ****     TIM2_OVC++;
 204              		.loc 1 161 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 162:Core/Src/main.c **** }
 209              		.loc 1 162 5 view .LVU50
 162:Core/Src/main.c **** }
 210              		.loc 1 162 13 is_stmt 0 view .LVU51
 211 0000 034A     		ldr	r2, .L12
 212 0002 1388     		ldrh	r3, [r2]
 213 0004 9BB2     		uxth	r3, r3
 214 0006 0133     		adds	r3, r3, #1
 215 0008 9BB2     		uxth	r3, r3
 216 000a 1380     		strh	r3, [r2]	@ movhi
 163:Core/Src/main.c **** 
 217              		.loc 1 163 1 view .LVU52
 218 000c 7047     		bx	lr
 219              	.L13:
 220 000e 00BF     		.align	2
 221              	.L12:
 222 0010 00000000 		.word	.LANCHOR2
 223              		.cfi_endproc
 224              	.LFE68:
 226              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccSvI0xi.s 			page 11


 227              		.align	1
 228              		.global	Error_Handler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu softvfp
 234              	Error_Handler:
 235              	.LFB73:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE END 4 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 319:Core/Src/main.c ****   * @retval None
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c **** void Error_Handler(void)
 322:Core/Src/main.c **** {
 236              		.loc 1 322 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ Volatile: function does not return.
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 323:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 324:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 325:Core/Src/main.c ****   __disable_irq();
 242              		.loc 1 325 3 view .LVU54
 243              	.LBB6:
 244              	.LBI6:
 245              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
ARM GAS  /tmp/ccSvI0xi.s 			page 12


  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 246              		.loc 2 69 57 view .LVU55
 247              	.LBB7:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 248              		.loc 2 71 3 view .LVU56
 249              		.syntax unified
 250              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 251 0000 72B6     		cpsid i
 252              	@ 0 "" 2
 253              		.thumb
 254              		.syntax unified
 255              	.L15:
 256              	.LBE7:
ARM GAS  /tmp/ccSvI0xi.s 			page 13


 257              	.LBE6:
 326:Core/Src/main.c ****   while (1)
 258              		.loc 1 326 3 discriminator 1 view .LVU57
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****   }
 259              		.loc 1 328 3 discriminator 1 view .LVU58
 326:Core/Src/main.c ****   while (1)
 260              		.loc 1 326 9 discriminator 1 view .LVU59
 261 0002 FEE7     		b	.L15
 262              		.cfi_endproc
 263              	.LFE73:
 265              		.section	.text.MX_TIM2_Init,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu softvfp
 272              	MX_TIM2_Init:
 273              	.LFB70:
 210:Core/Src/main.c **** 
 274              		.loc 1 210 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 40
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 00B5     		push	{lr}
 279              	.LCFI2:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 14, -4
 282 0002 8BB0     		sub	sp, sp, #44
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 48
 216:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 285              		.loc 1 216 3 view .LVU61
 216:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 286              		.loc 1 216 26 is_stmt 0 view .LVU62
 287 0004 0023     		movs	r3, #0
 288 0006 0693     		str	r3, [sp, #24]
 289 0008 0793     		str	r3, [sp, #28]
 290 000a 0893     		str	r3, [sp, #32]
 291 000c 0993     		str	r3, [sp, #36]
 217:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 292              		.loc 1 217 3 is_stmt 1 view .LVU63
 217:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 293              		.loc 1 217 27 is_stmt 0 view .LVU64
 294 000e 0493     		str	r3, [sp, #16]
 295 0010 0593     		str	r3, [sp, #20]
 218:Core/Src/main.c **** 
 296              		.loc 1 218 3 is_stmt 1 view .LVU65
 218:Core/Src/main.c **** 
 297              		.loc 1 218 22 is_stmt 0 view .LVU66
 298 0012 0093     		str	r3, [sp]
 299 0014 0193     		str	r3, [sp, #4]
 300 0016 0293     		str	r3, [sp, #8]
 301 0018 0393     		str	r3, [sp, #12]
 223:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 302              		.loc 1 223 3 is_stmt 1 view .LVU67
 223:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
ARM GAS  /tmp/ccSvI0xi.s 			page 14


 303              		.loc 1 223 18 is_stmt 0 view .LVU68
 304 001a 1D48     		ldr	r0, .L28
 305 001c 4FF08042 		mov	r2, #1073741824
 306 0020 0260     		str	r2, [r0]
 224:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 307              		.loc 1 224 3 is_stmt 1 view .LVU69
 224:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 308              		.loc 1 224 24 is_stmt 0 view .LVU70
 309 0022 4360     		str	r3, [r0, #4]
 225:Core/Src/main.c ****   htim2.Init.Period = 65535;
 310              		.loc 1 225 3 is_stmt 1 view .LVU71
 225:Core/Src/main.c ****   htim2.Init.Period = 65535;
 311              		.loc 1 225 26 is_stmt 0 view .LVU72
 312 0024 8360     		str	r3, [r0, #8]
 226:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313              		.loc 1 226 3 is_stmt 1 view .LVU73
 226:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 314              		.loc 1 226 21 is_stmt 0 view .LVU74
 315 0026 4FF6FF72 		movw	r2, #65535
 316 002a C260     		str	r2, [r0, #12]
 227:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 317              		.loc 1 227 3 is_stmt 1 view .LVU75
 227:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 318              		.loc 1 227 28 is_stmt 0 view .LVU76
 319 002c 0361     		str	r3, [r0, #16]
 228:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 320              		.loc 1 228 3 is_stmt 1 view .LVU77
 228:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 321              		.loc 1 228 32 is_stmt 0 view .LVU78
 322 002e 8361     		str	r3, [r0, #24]
 229:Core/Src/main.c ****   {
 323              		.loc 1 229 3 is_stmt 1 view .LVU79
 229:Core/Src/main.c ****   {
 324              		.loc 1 229 7 is_stmt 0 view .LVU80
 325 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 326              	.LVL2:
 229:Core/Src/main.c ****   {
 327              		.loc 1 229 6 view .LVU81
 328 0034 08BB     		cbnz	r0, .L23
 233:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 329              		.loc 1 233 3 is_stmt 1 view .LVU82
 233:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 330              		.loc 1 233 34 is_stmt 0 view .LVU83
 331 0036 4FF48053 		mov	r3, #4096
 332 003a 0693     		str	r3, [sp, #24]
 234:Core/Src/main.c ****   {
 333              		.loc 1 234 3 is_stmt 1 view .LVU84
 234:Core/Src/main.c ****   {
 334              		.loc 1 234 7 is_stmt 0 view .LVU85
 335 003c 06A9     		add	r1, sp, #24
 336 003e 1448     		ldr	r0, .L28
 337 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 338              	.LVL3:
 234:Core/Src/main.c ****   {
 339              		.loc 1 234 6 view .LVU86
 340 0044 D8B9     		cbnz	r0, .L24
 238:Core/Src/main.c ****   {
ARM GAS  /tmp/ccSvI0xi.s 			page 15


 341              		.loc 1 238 3 is_stmt 1 view .LVU87
 238:Core/Src/main.c ****   {
 342              		.loc 1 238 7 is_stmt 0 view .LVU88
 343 0046 1248     		ldr	r0, .L28
 344 0048 FFF7FEFF 		bl	HAL_TIM_IC_Init
 345              	.LVL4:
 238:Core/Src/main.c ****   {
 346              		.loc 1 238 6 view .LVU89
 347 004c C8B9     		cbnz	r0, .L25
 242:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 348              		.loc 1 242 3 is_stmt 1 view .LVU90
 242:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 349              		.loc 1 242 37 is_stmt 0 view .LVU91
 350 004e 0023     		movs	r3, #0
 351 0050 0493     		str	r3, [sp, #16]
 243:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 352              		.loc 1 243 3 is_stmt 1 view .LVU92
 243:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 353              		.loc 1 243 33 is_stmt 0 view .LVU93
 354 0052 0593     		str	r3, [sp, #20]
 244:Core/Src/main.c ****   {
 355              		.loc 1 244 3 is_stmt 1 view .LVU94
 244:Core/Src/main.c ****   {
 356              		.loc 1 244 7 is_stmt 0 view .LVU95
 357 0054 04A9     		add	r1, sp, #16
 358 0056 0E48     		ldr	r0, .L28
 359 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 360              	.LVL5:
 244:Core/Src/main.c ****   {
 361              		.loc 1 244 6 view .LVU96
 362 005c 98B9     		cbnz	r0, .L26
 248:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 363              		.loc 1 248 3 is_stmt 1 view .LVU97
 248:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 364              		.loc 1 248 24 is_stmt 0 view .LVU98
 365 005e 0022     		movs	r2, #0
 366 0060 0092     		str	r2, [sp]
 249:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 367              		.loc 1 249 3 is_stmt 1 view .LVU99
 249:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 368              		.loc 1 249 25 is_stmt 0 view .LVU100
 369 0062 0123     		movs	r3, #1
 370 0064 0193     		str	r3, [sp, #4]
 250:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 371              		.loc 1 250 3 is_stmt 1 view .LVU101
 250:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 372              		.loc 1 250 25 is_stmt 0 view .LVU102
 373 0066 0292     		str	r2, [sp, #8]
 251:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 374              		.loc 1 251 3 is_stmt 1 view .LVU103
 251:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 375              		.loc 1 251 22 is_stmt 0 view .LVU104
 376 0068 0392     		str	r2, [sp, #12]
 252:Core/Src/main.c ****   {
 377              		.loc 1 252 3 is_stmt 1 view .LVU105
 252:Core/Src/main.c ****   {
 378              		.loc 1 252 7 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccSvI0xi.s 			page 16


 379 006a 6946     		mov	r1, sp
 380 006c 0848     		ldr	r0, .L28
 381 006e FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 382              	.LVL6:
 252:Core/Src/main.c ****   {
 383              		.loc 1 252 6 view .LVU107
 384 0072 50B9     		cbnz	r0, .L27
 260:Core/Src/main.c **** 
 385              		.loc 1 260 1 view .LVU108
 386 0074 0BB0     		add	sp, sp, #44
 387              	.LCFI4:
 388              		.cfi_remember_state
 389              		.cfi_def_cfa_offset 4
 390              		@ sp needed
 391 0076 5DF804FB 		ldr	pc, [sp], #4
 392              	.L23:
 393              	.LCFI5:
 394              		.cfi_restore_state
 231:Core/Src/main.c ****   }
 395              		.loc 1 231 5 is_stmt 1 view .LVU109
 396 007a FFF7FEFF 		bl	Error_Handler
 397              	.LVL7:
 398              	.L24:
 236:Core/Src/main.c ****   }
 399              		.loc 1 236 5 view .LVU110
 400 007e FFF7FEFF 		bl	Error_Handler
 401              	.LVL8:
 402              	.L25:
 240:Core/Src/main.c ****   }
 403              		.loc 1 240 5 view .LVU111
 404 0082 FFF7FEFF 		bl	Error_Handler
 405              	.LVL9:
 406              	.L26:
 246:Core/Src/main.c ****   }
 407              		.loc 1 246 5 view .LVU112
 408 0086 FFF7FEFF 		bl	Error_Handler
 409              	.LVL10:
 410              	.L27:
 254:Core/Src/main.c ****   }
 411              		.loc 1 254 5 view .LVU113
 412 008a FFF7FEFF 		bl	Error_Handler
 413              	.LVL11:
 414              	.L29:
 415 008e 00BF     		.align	2
 416              	.L28:
 417 0090 00000000 		.word	.LANCHOR7
 418              		.cfi_endproc
 419              	.LFE70:
 421              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu softvfp
 428              	MX_USART1_UART_Init:
 429              	.LFB71:
 268:Core/Src/main.c **** 
ARM GAS  /tmp/ccSvI0xi.s 			page 17


 430              		.loc 1 268 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI6:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 277:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 439              		.loc 1 277 3 view .LVU115
 277:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 440              		.loc 1 277 19 is_stmt 0 view .LVU116
 441 0002 0A48     		ldr	r0, .L34
 442 0004 0A4B     		ldr	r3, .L34+4
 443 0006 0360     		str	r3, [r0]
 278:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 444              		.loc 1 278 3 is_stmt 1 view .LVU117
 278:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 445              		.loc 1 278 24 is_stmt 0 view .LVU118
 446 0008 4FF4E133 		mov	r3, #115200
 447 000c 4360     		str	r3, [r0, #4]
 279:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 448              		.loc 1 279 3 is_stmt 1 view .LVU119
 279:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 449              		.loc 1 279 26 is_stmt 0 view .LVU120
 450 000e 0023     		movs	r3, #0
 451 0010 8360     		str	r3, [r0, #8]
 280:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 452              		.loc 1 280 3 is_stmt 1 view .LVU121
 280:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 453              		.loc 1 280 24 is_stmt 0 view .LVU122
 454 0012 C360     		str	r3, [r0, #12]
 281:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 455              		.loc 1 281 3 is_stmt 1 view .LVU123
 281:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 456              		.loc 1 281 22 is_stmt 0 view .LVU124
 457 0014 0361     		str	r3, [r0, #16]
 282:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 458              		.loc 1 282 3 is_stmt 1 view .LVU125
 282:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 459              		.loc 1 282 20 is_stmt 0 view .LVU126
 460 0016 0C22     		movs	r2, #12
 461 0018 4261     		str	r2, [r0, #20]
 283:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 462              		.loc 1 283 3 is_stmt 1 view .LVU127
 283:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 463              		.loc 1 283 25 is_stmt 0 view .LVU128
 464 001a 8361     		str	r3, [r0, #24]
 284:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 465              		.loc 1 284 3 is_stmt 1 view .LVU129
 284:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 466              		.loc 1 284 28 is_stmt 0 view .LVU130
 467 001c C361     		str	r3, [r0, #28]
 285:Core/Src/main.c ****   {
 468              		.loc 1 285 3 is_stmt 1 view .LVU131
 285:Core/Src/main.c ****   {
ARM GAS  /tmp/ccSvI0xi.s 			page 18


 469              		.loc 1 285 7 is_stmt 0 view .LVU132
 470 001e FFF7FEFF 		bl	HAL_UART_Init
 471              	.LVL12:
 285:Core/Src/main.c ****   {
 472              		.loc 1 285 6 view .LVU133
 473 0022 00B9     		cbnz	r0, .L33
 293:Core/Src/main.c **** 
 474              		.loc 1 293 1 view .LVU134
 475 0024 08BD     		pop	{r3, pc}
 476              	.L33:
 287:Core/Src/main.c ****   }
 477              		.loc 1 287 5 is_stmt 1 view .LVU135
 478 0026 FFF7FEFF 		bl	Error_Handler
 479              	.LVL13:
 480              	.L35:
 481 002a 00BF     		.align	2
 482              	.L34:
 483 002c 00000000 		.word	.LANCHOR8
 484 0030 00380140 		.word	1073821696
 485              		.cfi_endproc
 486              	.LFE71:
 488              		.section	.text.SystemClock_Config,"ax",%progbits
 489              		.align	1
 490              		.global	SystemClock_Config
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu softvfp
 496              	SystemClock_Config:
 497              	.LFB69:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 498              		.loc 1 170 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 64
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 00B5     		push	{lr}
 503              	.LCFI7:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 14, -4
 506 0002 91B0     		sub	sp, sp, #68
 507              	.LCFI8:
 508              		.cfi_def_cfa_offset 72
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 509              		.loc 1 171 3 view .LVU137
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 510              		.loc 1 171 22 is_stmt 0 view .LVU138
 511 0004 2822     		movs	r2, #40
 512 0006 0021     		movs	r1, #0
 513 0008 06A8     		add	r0, sp, #24
 514 000a FFF7FEFF 		bl	memset
 515              	.LVL14:
 172:Core/Src/main.c **** 
 516              		.loc 1 172 3 is_stmt 1 view .LVU139
 172:Core/Src/main.c **** 
 517              		.loc 1 172 22 is_stmt 0 view .LVU140
 518 000e 0023     		movs	r3, #0
 519 0010 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccSvI0xi.s 			page 19


 520 0012 0293     		str	r3, [sp, #8]
 521 0014 0393     		str	r3, [sp, #12]
 522 0016 0493     		str	r3, [sp, #16]
 523 0018 0593     		str	r3, [sp, #20]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 524              		.loc 1 177 3 is_stmt 1 view .LVU141
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 525              		.loc 1 177 36 is_stmt 0 view .LVU142
 526 001a 0122     		movs	r2, #1
 527 001c 0692     		str	r2, [sp, #24]
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 528              		.loc 1 178 3 is_stmt 1 view .LVU143
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 529              		.loc 1 178 30 is_stmt 0 view .LVU144
 530 001e 4FF48033 		mov	r3, #65536
 531 0022 0793     		str	r3, [sp, #28]
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 532              		.loc 1 179 3 is_stmt 1 view .LVU145
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 533              		.loc 1 180 3 view .LVU146
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 534              		.loc 1 180 30 is_stmt 0 view .LVU147
 535 0024 0A92     		str	r2, [sp, #40]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 536              		.loc 1 181 3 is_stmt 1 view .LVU148
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 537              		.loc 1 181 34 is_stmt 0 view .LVU149
 538 0026 0222     		movs	r2, #2
 539 0028 0D92     		str	r2, [sp, #52]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 540              		.loc 1 182 3 is_stmt 1 view .LVU150
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 541              		.loc 1 182 35 is_stmt 0 view .LVU151
 542 002a 0E93     		str	r3, [sp, #56]
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 543              		.loc 1 183 3 is_stmt 1 view .LVU152
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 544              		.loc 1 183 32 is_stmt 0 view .LVU153
 545 002c 4FF4E013 		mov	r3, #1835008
 546 0030 0F93     		str	r3, [sp, #60]
 184:Core/Src/main.c ****   {
 547              		.loc 1 184 3 is_stmt 1 view .LVU154
 184:Core/Src/main.c ****   {
 548              		.loc 1 184 7 is_stmt 0 view .LVU155
 549 0032 06A8     		add	r0, sp, #24
 550 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 551              	.LVL15:
 184:Core/Src/main.c ****   {
 552              		.loc 1 184 6 view .LVU156
 553 0038 80B9     		cbnz	r0, .L40
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 554              		.loc 1 191 3 is_stmt 1 view .LVU157
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 555              		.loc 1 191 31 is_stmt 0 view .LVU158
 556 003a 0F23     		movs	r3, #15
 557 003c 0193     		str	r3, [sp, #4]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccSvI0xi.s 			page 20


 558              		.loc 1 193 3 is_stmt 1 view .LVU159
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 559              		.loc 1 193 34 is_stmt 0 view .LVU160
 560 003e 0221     		movs	r1, #2
 561 0040 0291     		str	r1, [sp, #8]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 562              		.loc 1 194 3 is_stmt 1 view .LVU161
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 563              		.loc 1 194 35 is_stmt 0 view .LVU162
 564 0042 0023     		movs	r3, #0
 565 0044 0393     		str	r3, [sp, #12]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 566              		.loc 1 195 3 is_stmt 1 view .LVU163
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 567              		.loc 1 195 36 is_stmt 0 view .LVU164
 568 0046 4FF48062 		mov	r2, #1024
 569 004a 0492     		str	r2, [sp, #16]
 196:Core/Src/main.c **** 
 570              		.loc 1 196 3 is_stmt 1 view .LVU165
 196:Core/Src/main.c **** 
 571              		.loc 1 196 36 is_stmt 0 view .LVU166
 572 004c 0593     		str	r3, [sp, #20]
 198:Core/Src/main.c ****   {
 573              		.loc 1 198 3 is_stmt 1 view .LVU167
 198:Core/Src/main.c ****   {
 574              		.loc 1 198 7 is_stmt 0 view .LVU168
 575 004e 01A8     		add	r0, sp, #4
 576 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 577              	.LVL16:
 198:Core/Src/main.c ****   {
 578              		.loc 1 198 6 view .LVU169
 579 0054 20B9     		cbnz	r0, .L41
 202:Core/Src/main.c **** 
 580              		.loc 1 202 1 view .LVU170
 581 0056 11B0     		add	sp, sp, #68
 582              	.LCFI9:
 583              		.cfi_remember_state
 584              		.cfi_def_cfa_offset 4
 585              		@ sp needed
 586 0058 5DF804FB 		ldr	pc, [sp], #4
 587              	.L40:
 588              	.LCFI10:
 589              		.cfi_restore_state
 186:Core/Src/main.c ****   }
 590              		.loc 1 186 5 is_stmt 1 view .LVU171
 591 005c FFF7FEFF 		bl	Error_Handler
 592              	.LVL17:
 593              	.L41:
 200:Core/Src/main.c ****   }
 594              		.loc 1 200 5 view .LVU172
 595 0060 FFF7FEFF 		bl	Error_Handler
 596              	.LVL18:
 597              		.cfi_endproc
 598              	.LFE69:
 600              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 601              		.align	2
 602              	.LC0:
ARM GAS  /tmp/ccSvI0xi.s 			page 21


 603 0000 52504D20 		.ascii	"RPM = %lu \012\015\000"
 603      3D20256C 
 603      75200A0D 
 603      00
 604              		.section	.text.main,"ax",%progbits
 605              		.align	1
 606              		.global	main
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu softvfp
 612              	main:
 613              	.LFB66:
  87:Core/Src/main.c **** 
 614              		.loc 1 87 1 view -0
 615              		.cfi_startproc
 616              		@ Volatile: function does not return.
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0000 08B5     		push	{r3, lr}
 620              	.LCFI11:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 3, -8
 623              		.cfi_offset 14, -4
  96:Core/Src/main.c **** 
 624              		.loc 1 96 3 view .LVU174
 625 0002 FFF7FEFF 		bl	HAL_Init
 626              	.LVL19:
 103:Core/Src/main.c **** 
 627              		.loc 1 103 3 view .LVU175
 628 0006 FFF7FEFF 		bl	SystemClock_Config
 629              	.LVL20:
 110:Core/Src/main.c ****   MX_TIM2_Init();
 630              		.loc 1 110 3 view .LVU176
 631 000a FFF7FEFF 		bl	MX_GPIO_Init
 632              	.LVL21:
 111:Core/Src/main.c ****   MX_USART1_UART_Init();
 633              		.loc 1 111 3 view .LVU177
 634 000e FFF7FEFF 		bl	MX_TIM2_Init
 635              	.LVL22:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 636              		.loc 1 112 3 view .LVU178
 637 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 638              	.LVL23:
 114:Core/Src/main.c ****   HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);
 639              		.loc 1 114 3 view .LVU179
 640 0016 0D4C     		ldr	r4, .L45
 641 0018 2046     		mov	r0, r4
 642 001a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 643              	.LVL24:
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 644              		.loc 1 115 3 view .LVU180
 645 001e 0021     		movs	r1, #0
 646 0020 2046     		mov	r0, r4
 647 0022 FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
 648              	.LVL25:
 649              	.L43:
ARM GAS  /tmp/ccSvI0xi.s 			page 22


 120:Core/Src/main.c ****   {
 650              		.loc 1 120 3 discriminator 1 view .LVU181
 125:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, message2, sizeof(message2), 100);
 651              		.loc 1 125 5 discriminator 1 view .LVU182
 652 0026 0A4B     		ldr	r3, .L45+4
 653 0028 1A68     		ldr	r2, [r3]
 654 002a 0A4C     		ldr	r4, .L45+8
 655 002c 0A49     		ldr	r1, .L45+12
 656 002e 2046     		mov	r0, r4
 657 0030 FFF7FEFF 		bl	sprintf
 658              	.LVL26:
 126:Core/Src/main.c ****     HAL_Delay(1000);
 659              		.loc 1 126 5 discriminator 1 view .LVU183
 660 0034 6423     		movs	r3, #100
 661 0036 2322     		movs	r2, #35
 662 0038 2146     		mov	r1, r4
 663 003a 0848     		ldr	r0, .L45+16
 664 003c FFF7FEFF 		bl	HAL_UART_Transmit
 665              	.LVL27:
 127:Core/Src/main.c ****   }
 666              		.loc 1 127 5 discriminator 1 view .LVU184
 667 0040 4FF47A70 		mov	r0, #1000
 668 0044 FFF7FEFF 		bl	HAL_Delay
 669              	.LVL28:
 120:Core/Src/main.c ****   {
 670              		.loc 1 120 9 discriminator 1 view .LVU185
 671 0048 EDE7     		b	.L43
 672              	.L46:
 673 004a 00BF     		.align	2
 674              	.L45:
 675 004c 00000000 		.word	.LANCHOR7
 676 0050 00000000 		.word	.LANCHOR6
 677 0054 00000000 		.word	.LANCHOR9
 678 0058 00000000 		.word	.LC0
 679 005c 00000000 		.word	.LANCHOR8
 680              		.cfi_endproc
 681              	.LFE66:
 683              		.global	huart1
 684              		.global	htim2
 685              		.global	rpm
 686              		.global	frequency
 687              		.global	TIM2_OVC
 688              		.global	ticks
 689              		.global	T2
 690              		.global	T1
 691              		.global	message2
 692              		.global	message
 693              		.global	state
 694              		.section	.bss.T1,"aw",%nobits
 695              		.align	2
 696              		.set	.LANCHOR1,. + 0
 699              	T1:
 700 0000 00000000 		.space	4
 701              		.section	.bss.T2,"aw",%nobits
 702              		.align	2
 703              		.set	.LANCHOR3,. + 0
 706              	T2:
ARM GAS  /tmp/ccSvI0xi.s 			page 23


 707 0000 00000000 		.space	4
 708              		.section	.bss.TIM2_OVC,"aw",%nobits
 709              		.align	1
 710              		.set	.LANCHOR2,. + 0
 713              	TIM2_OVC:
 714 0000 0000     		.space	2
 715              		.section	.bss.frequency,"aw",%nobits
 716              		.align	2
 717              		.set	.LANCHOR5,. + 0
 720              	frequency:
 721 0000 00000000 		.space	4
 722              		.section	.bss.htim2,"aw",%nobits
 723              		.align	2
 724              		.set	.LANCHOR7,. + 0
 727              	htim2:
 728 0000 00000000 		.space	72
 728      00000000 
 728      00000000 
 728      00000000 
 728      00000000 
 729              		.section	.bss.huart1,"aw",%nobits
 730              		.align	2
 731              		.set	.LANCHOR8,. + 0
 734              	huart1:
 735 0000 00000000 		.space	72
 735      00000000 
 735      00000000 
 735      00000000 
 735      00000000 
 736              		.section	.bss.message,"aw",%nobits
 737              		.align	2
 740              	message:
 741 0000 00000000 		.space	35
 741      00000000 
 741      00000000 
 741      00000000 
 741      00000000 
 742              		.section	.bss.message2,"aw",%nobits
 743              		.align	2
 744              		.set	.LANCHOR9,. + 0
 747              	message2:
 748 0000 00000000 		.space	35
 748      00000000 
 748      00000000 
 748      00000000 
 748      00000000 
 749              		.section	.bss.rpm,"aw",%nobits
 750              		.align	2
 751              		.set	.LANCHOR6,. + 0
 754              	rpm:
 755 0000 00000000 		.space	4
 756              		.section	.bss.state,"aw",%nobits
 757              		.set	.LANCHOR0,. + 0
 760              	state:
 761 0000 00       		.space	1
 762              		.section	.bss.ticks,"aw",%nobits
 763              		.align	2
ARM GAS  /tmp/ccSvI0xi.s 			page 24


 764              		.set	.LANCHOR4,. + 0
 767              	ticks:
 768 0000 00000000 		.space	4
 769              		.text
 770              	.Letext0:
 771              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 772              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 773              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 774              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 775              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 776              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 777              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 778              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 779              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 780              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 781              		.file 13 "/usr/include/newlib/stdio.h"
 782              		.file 14 "<built-in>"
ARM GAS  /tmp/ccSvI0xi.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccSvI0xi.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccSvI0xi.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccSvI0xi.s:74     .text.MX_GPIO_Init:000000000000002c $d
     /tmp/ccSvI0xi.s:79     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccSvI0xi.s:86     .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccSvI0xi.s:182    .text.HAL_TIM_IC_CaptureCallback:000000000000006c $d
     /tmp/ccSvI0xi.s:194    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccSvI0xi.s:201    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccSvI0xi.s:222    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccSvI0xi.s:227    .text.Error_Handler:0000000000000000 $t
     /tmp/ccSvI0xi.s:234    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccSvI0xi.s:266    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccSvI0xi.s:272    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccSvI0xi.s:417    .text.MX_TIM2_Init:0000000000000090 $d
     /tmp/ccSvI0xi.s:422    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccSvI0xi.s:428    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccSvI0xi.s:483    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccSvI0xi.s:489    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccSvI0xi.s:496    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccSvI0xi.s:601    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccSvI0xi.s:605    .text.main:0000000000000000 $t
     /tmp/ccSvI0xi.s:612    .text.main:0000000000000000 main
     /tmp/ccSvI0xi.s:675    .text.main:000000000000004c $d
     /tmp/ccSvI0xi.s:734    .bss.huart1:0000000000000000 huart1
     /tmp/ccSvI0xi.s:727    .bss.htim2:0000000000000000 htim2
     /tmp/ccSvI0xi.s:754    .bss.rpm:0000000000000000 rpm
     /tmp/ccSvI0xi.s:720    .bss.frequency:0000000000000000 frequency
     /tmp/ccSvI0xi.s:713    .bss.TIM2_OVC:0000000000000000 TIM2_OVC
     /tmp/ccSvI0xi.s:767    .bss.ticks:0000000000000000 ticks
     /tmp/ccSvI0xi.s:706    .bss.T2:0000000000000000 T2
     /tmp/ccSvI0xi.s:699    .bss.T1:0000000000000000 T1
     /tmp/ccSvI0xi.s:747    .bss.message2:0000000000000000 message2
     /tmp/ccSvI0xi.s:740    .bss.message:0000000000000000 message
     /tmp/ccSvI0xi.s:760    .bss.state:0000000000000000 state
     /tmp/ccSvI0xi.s:695    .bss.T1:0000000000000000 $d
     /tmp/ccSvI0xi.s:702    .bss.T2:0000000000000000 $d
     /tmp/ccSvI0xi.s:709    .bss.TIM2_OVC:0000000000000000 $d
     /tmp/ccSvI0xi.s:716    .bss.frequency:0000000000000000 $d
     /tmp/ccSvI0xi.s:723    .bss.htim2:0000000000000000 $d
     /tmp/ccSvI0xi.s:730    .bss.huart1:0000000000000000 $d
     /tmp/ccSvI0xi.s:737    .bss.message:0000000000000000 $d
     /tmp/ccSvI0xi.s:743    .bss.message2:0000000000000000 $d
     /tmp/ccSvI0xi.s:750    .bss.rpm:0000000000000000 $d
     /tmp/ccSvI0xi.s:761    .bss.state:0000000000000000 $d
     /tmp/ccSvI0xi.s:763    .bss.ticks:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
ARM GAS  /tmp/ccSvI0xi.s 			page 26


HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_IC_Start_IT
sprintf
HAL_UART_Transmit
HAL_Delay
